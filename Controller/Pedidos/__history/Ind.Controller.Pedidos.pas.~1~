unit Ind.Controller.Pedidos;

interface

uses
  Ind.Controller.Interfaces, FMX.Types;
type
  TControllerPedidos = class(TInterfacedObject, iControllerPedidos)
    private
      FParent : iController;
      FBind : TFMXObject;
    public
      constructor Create(Parent : iController);
      destructor Destroy; override;
      class function New(Parent : iController) : iControllerPedidos;
      function Bind(value : TFMXObject) : iControllerPedidos;
      function &End : iController;
  end;

implementation

uses
  FMX.Forms, System.Classes;

{ TControllerPedidos }


function TControllerPedidos.&End: iController;
begin
  Result := FParent;
end;

function TControllerPedidos.Bind(value: TFMXObject): iControllerPedidos;
begin
  Result := self;
  FBind := value;
end;

constructor TControllerPedidos.Create(Parent : iController);
begin
  FParent := Parent;
end;

destructor TControllerPedidos.Destroy;
begin

  inherited;
end;

class function TControllerPedidos.New(Parent : iController): iControllerPedidos;
begin
  Result := Self.Create(Parent);
end;


end.
