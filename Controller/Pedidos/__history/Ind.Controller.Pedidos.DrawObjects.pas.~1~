unit Ind.Controller.Pedidos.DrawObjects;

interface

uses
  Ind.Controller.Interfaces, FMX.Types;
type
  TControllerPedidosDrawObjects = class(TInterfacedObject, iControllerPedidosDrawObjects)
    private
      FParent : iControllerPedidos;
      FBind : TFMXObject;
    public
      constructor Create(Parent : iControllerPedidos);
      destructor Destroy; override;
      class function New(Parent : iControllerPedidos) : iControllerPedidosDrawObjects;
      function alterarPedido(id : string) : iControllerPedidosDrawObjects;
      function novoPedido(id : string) : iControllerPedidosDrawObjects;
      function nomeCliente(value : string) : iControllerPedidosDrawObjects;
      function horaPedido(value : string) : iControllerPedidosDrawObjects;
      function status(value : string) : iControllerPedidosDrawObjects;
      function &End : iControllerPedidos;
  end;

implementation

uses
  FMX.Forms, System.Classes;

{ TControllerPedidos }


function TControllerPedidosDrawObjects.&End: iControllerPedidos;
begin
  Result := FParent;
end;

function TControllerPedidosDrawObjects.alterarPedido(
  id: string): iControllerPedidosDrawObjects;
begin

end;

function TControllerPedidosDrawObjects.horaPedido(
  value: string): iControllerPedidosDrawObjects;
begin

end;

constructor TControllerPedidosDrawObjects.Create(Parent : iControllerPedidos);
begin
  FParent := Parent;
end;

destructor TControllerPedidosDrawObjects.Destroy;
begin

  inherited;
end;

class function TControllerPedidosDrawObjects.New(Parent : iController): iControllerPedidosDrawObjects;
begin
  Result := Self.Create(Parent);
end;


function TControllerPedidosDrawObjects.nomeCliente(
  value: string): iControllerPedidosDrawObjects;
begin

end;

function TControllerPedidosDrawObjects.novoPedido(
  id: string): iControllerPedidosDrawObjects;
begin

end;

function TControllerPedidosDrawObjects.status(
  value: string): iControllerPedidosDrawObjects;
begin

end;

end.
