unit Ind.Controller;

interface

uses
  Ind.Controller.Interfaces;
type
  TController = class(TInterfacedObject, iController)
    private
      FCLIENTES : iControllerClientes;

    public
      constructor Create;
      destructor Destroy; override;
      class function New : iController;

  end;

implementation

{ TController }


constructor TController.Create;
begin

end;

destructor TController.Destroy;
begin

  inherited;
end;

function TController.ExcelExport: iControllerExport;
begin
  if not Assigned(FExcelExport) then
    FExcelExport := TControllerExport.New(Self);

  Result := FExcelExport;
end;

class function TController.New: iController;
begin
    Result := Self.Create;
end;

end.
