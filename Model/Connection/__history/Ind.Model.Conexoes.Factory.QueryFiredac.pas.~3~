unit Ind.Model.Conexoes.Factory.QueryFiredac;

interface

uses Ind.Model.Conexoes.Interfaces, Ind.Controller.Conexoes.Factory.Conexao,
  Ind.Model.Conexoes.QueryFireDac;


Type
  TModelFactoryQueryFiredac = class(TInterfacedObject, iModelQueryFactory)
    private
    FConexao : iModelConexao;
    FQuery : iQuery;

    public
      constructor Create(Conexao : iModelConexao);
      destructor Destroy; override;
      class function New(Conexao : iModelConexao) : iModelQueryFactory;
      function Query : iQuery;
  end;

implementation

{ TModelConexaoFactoryDataSet }

constructor TModelFactoryQueryFiredac.Create(Conexao : iModelConexao);
begin
  FConexao := Conexao;
  FQuery := TFiredacModelQuery.New(FConexao);

end;

destructor TModelFactoryQueryFiredac.Destroy;
begin
  inherited;
end;

class function TModelFactoryQueryFiredac.New(Conexao : iModelConexao): iModelQueryFactory;
begin
  Result := Self.Create(Conexao);
end;

function TModelFactoryQueryFiredac.Query: iQuery;
begin
  Result := FQuery;
end;

end.
